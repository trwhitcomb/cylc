#!/bin/bash

set -e; trap "echo ERROR" ERR

usage() {
    echo "USAGE: $0 [--tag] x.y.z"
    echo "Make a release tarball from the cylc git repo in \$CYLC_DIR"
    echo "  \$CYLC_DIR and \$TMPDIR must be set."
    echo "If --tag is specified the repository will be tagged with"
    echo "the new version number. The tarball ends up in \$HOME."
}
TAG=false
if [[ $# == 2 ]]; then
    if [[ $1 == '--tag' ]]; then
        TAG=true
    else
        usage
        exit 1
    fi
    VSN=$2
elif [[ $# == 1 ]]; then
    VSN=$1
else
    echo "ERROR: too many args"
    usage
    exit 1
fi

# determine CYLC_DIR
MYDIR=$(dirname $0)
CYLC_DIR=$( readlink -f $MYDIR/../.. )
echo $CYLC_DIR

if [[ -z $CYLC_DIR ]]; then
    echo "ERROR: \$CYLC_DIR required"
    usage
    exit 1
fi

ORIG_CYLC_DIR=$CYLC_DIR

if [[ -z $TMPDIR ]]; then
    echo "ERROR: \$TMPDIR required"
    usage
    exit 1
fi

REPO="cylc-${VSN}"
TARBALL="cylc-${VSN}.tgz"
TMP=$TMPDIR/$$
mkdir -p $TMP
cd $TMP
git clone $CYLC_DIR
mv $(basename $CYLC_DIR) $REPO
cd $REPO
rm -rf .git

# - replace the cylc version tag throughout
# - make documentation
# - remove doc source
# - remove dev material

echo "SETTING VERSION TAG IN MAIN COMMAND AND USER GUIDE"
perl -pi -e "s/THIS IS NOT A VERSIONED RELEASE/$VSN/" lib/cylc/gui/gcylc.py
perl -pi -e "s/THIS IS NOT A VERSIONED RELEASE/$VSN/" lib/cylc/gui/SuiteControl.py
perl -pi -e "s/THIS IS NOT A VERSIONED RELEASE/$VSN/" bin/cylc
perl -pi -e "s/THIS IS NOT A VERSIONED RELEASE/$VSN/" doc/cug-pdf.tex
perl -pi -e "s/THIS IS NOT A VERSIONED RELEASE/$VSN/" doc/cug-html.tex
perl -pi -e "s/THIS IS NOT A VERSIONED RELEASE/$VSN/" doc/cug.tex
perl -pi -e "s/THIS IS NOT A VERSIONED RELEASE/$VSN/" README

echo "MAKING DOCUMENTATION (USER GUIDE)"
echo
echo "LATEX PROCESSING"
pwd
doc/process -c

echo "DELETING DOCUMENTATION SOURCE"
# copy and restore generated documents from doc.
mkdir tmpdoc
cp doc/cug-pdf.pdf tmpdoc
cp doc/*.html tmpdoc
cp doc/*.css tmpdoc
cp -r doc/images tmpdoc
cp -r doc/screenshots tmpdoc
rm -r doc
mv tmpdoc doc
mv doc/cug-pdf.pdf doc/CylcUserGuide.pdf

echo "DELETING DEV DIRECTORY"
rm -r dev

echo "REMOVING .pyc FILES"
find . -name '*.pyc' | xargs rm -f

echo "REMOVING .git files"
find . -name '.git*' | xargs rm -f

echo "DONE"

cd .. 
echo "CREATING RELEASE $TARBALL"
tar czf $TARBALL $REPO
echo "MOVING $TARBALL TO $HOME"
mv $TARBALL $HOME 
cd
echo "UNPACKING $TARBALL"
tar xzf $TARBALL

if $TAG; then
    cd $ORIG_CYLC_DIR
    git tag -a $VSN -m 'New cylc release tag.'
fi

# EOF
