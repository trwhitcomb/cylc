title = "expression task generator example suite"

description = """A list of similar tasks all defined at once, in which 
the task names are generated automatically by a Python expression (a
"list comprehension"). See also the 'explicit' task generator example,
in which the task names are listed explicitly."""

[scheduling]
    initial cycle time = 2011010106
    final cycle time = 2011010200
    [[special tasks]]
        sequential = foo    # just to slow the suite down a bit
    [[dependencies]]
        [[[0,6,12,18]]]
            graph = """
    # main graph
    foo => ensemble => bar
    # ensemble internal dependencies: m(i) => p(i), i=1,6
    Python:list( "m" + str(i) + '=>' + "p" + str(i) for i in range(1,7))
                    """
[runtime]
    [[root]]
        [[[environment]]]
    JOBS = $HOME/ensemble
    # a task-specific value that doesn't contain the task name:
    JOB_DIR_m1 = $JOBS/xxx

    [[ensemble]] # Define all tasks in the ensemble family at once (m1,...,m6;p1,...,p6)
    [['Python:list( "m" + str(i) for i in range(1,7)) + list( "p" + str(i) for i in range(1,7))']]
        inherit = ensemble
        description = "Task $(TASK) of the ensemble family"
        command scripting = """
cylc task message "Hello 1 from $(TASK) aka $CYLC_TASK_NAME"
sleep 5
if [[ $CYLC_TASK_NAME = m3 ]]; then # how to distinguish tasks at run time.
    cylc task message "My JOB DIRECTORY is $JOB_DIR"
else
    cylc task message "My job directory is $JOB_DIR"
fi
sleep 5
                  """
        [[[environment]]]
            JOB_DIR = ${JOB_DIR_$(TASK):-$JOBS/$(TASK)}

[visualization]
    collapsed families = ensemble

# NOTE: $(TASK) is replaced by the actual task name in all config items
# at the time of task definition, whereas all tasks are provided with
# $CYLC_TASK_NAME (and $CYLC_TASK_ID and $CYLC_TASK_CYCLE_TIME) at run
# time.  So you can use $(TASK) or $CYLC_TASK_NAME in the command or
# environment items (but $(TASK) is required in 'JOB_DIR = ...' above
# because we are generating an environment variable name on the right
# side, at task definition time).  Inspect a task job script to see all
# this: cylc submit --dry-run.

# NOTE: The Python list generating expression must be quoted to hide
# internal commas from the suite.rc parser. 
