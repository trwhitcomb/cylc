#!/usr/bin/env python

#C: THIS FILE IS PART OF THE CYLC FORECAST SUITE METASCHEDULER.
#C: Copyright (C) 2008-2011 Hilary Oliver, NIWA
#C: 
#C: This program is free software: you can redistribute it and/or modify
#C: it under the terms of the GNU General Public License as published by
#C: the Free Software Foundation, either version 3 of the License, or
#C: (at your option) any later version.
#C:
#C: This program is distributed in the hope that it will be useful,
#C: but WITHOUT ANY WARRANTY; without even the implied warranty of
#C: MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#C: GNU General Public License for more details.
#C:
#C: You should have received a copy of the GNU General Public License
#C: along with this program.  If not, see <http://www.gnu.org/licenses/>.

import sys
from optparse import OptionParser
from cylc.registration import localdb, RegistrationError, DatabaseLockedError

parser = OptionParser( usage = """cylc [db] alias [options] SUITE ALIAS 

Register an alias for suite. Using the alias on the command line is
entirely equivalent to using target suite name (and if you run a suite
via an alias, run time identity will correspond to the target suite).

  $ cylc alias global.ensemble.parallel.test3 bob
  $ cylc edit bob
  $ cylc run  bob     # work with global.ensemble.parallel.test3
  $ cylc stop bob

This differs from registering the target suite definition under another
name with 'cylc register' - in that case run time suite identity will
correspond to the new registered name. 

Arguments:
     SUITE  -  Target suite.
     ALIAS  -  An alternative name for the same suite.""" )

parser.add_option( "-v","--verbose",
        help="Print extra information.",
        action="store_true", default=False, dest="verbose" )

( options, args ) = parser.parse_args()

if len(args) != 2:
    parser.error( "Wrong number of arguments" )

suite = args[0]
alias = args[1]

db = localdb( verbose=options.verbose )
try:
    db.lock()
    db.load_from_file()
    db.alias( suite, alias )
    db.dump_to_file()
    db.unlock()

except DatabaseLockedError, x:
    raise SystemExit(x)
except RegistrationError, x:
    print >> sys.stderr, x
    db.unlock()
    sys.exit(1)
