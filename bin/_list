#!/usr/bin/env python

#C: THIS FILE IS PART OF THE CYLC FORECAST SUITE METASCHEDULER.
#C: Copyright (C) 2008-2011 Hilary Oliver, NIWA
#C: 
#C: This program is free software: you can redistribute it and/or modify
#C: it under the terms of the GNU General Public License as published by
#C: the Free Software Foundation, either version 3 of the License, or
#C: (at your option) any later version.
#C:
#C: This program is distributed in the hope that it will be useful,
#C: but WITHOUT ANY WARRANTY; without even the implied warranty of
#C: MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#C: GNU General Public License for more details.
#C:
#C: You should have received a copy of the GNU General Public License
#C: along with this program.  If not, see <http://www.gnu.org/licenses/>.

import os, sys
from optparse import OptionParser
from cylc.config import config, SuiteConfigError
from cylc.registration import dbgetter, RegistrationError

parser = OptionParser( """cylc [info|prep] list|ls [OPTIONS] SUITE [FILTER]

Parse a suite and print its task list or inheritance hierarchy.

Arguments:
   SUITE    - Target suite
   FILTER   - regular expression filter on task names.""")

parser.add_option( "-c", "--central", 
        help="Target the central database.",
        action="store_true", default=False, dest="central" )

parser.add_option( "-t","--tree",
        help="Print the full runtime inheritance hierarchy.",
        action="store_true", default=False, dest="tree" )

parser.add_option( "-p","--pretty",
        help="Use unicode box drawing characters when printing "
        "the suite runtime inheritance hierarchy.",
        action="store_true", default=False, dest="pretty" )

(options, args) = parser.parse_args()

if len(args) == 1:
    filter = None
elif len(args) == 2:
    filter = args[1]
else:
    parser.error( "Wrong number or arguments" )

reg = args[0]
dbg = dbgetter( options.central )
try:
    suite, suiterc = dbg.get_suite(reg)
except RegistrationError, x:
    raise SystemExit(x)

try:
    config = config( suite, suiterc )
except SuiteConfigError,x:
    raise SystemExit(x)

if options.tree:
    config.print_inheritance_tree( filter=filter, pretty=options.pretty )
else:
    config.print_task_list( filter=filter )
